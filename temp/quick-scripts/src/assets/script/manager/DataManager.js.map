{"version":3,"sources":["assets\\script\\manager\\DataManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Created by carolsail\r\n\r\nimport { ENUM_GAME_STATUS, ENUM_PLAYER_STATUS } from \"../Enum\"\r\nimport Endpoint from \"../Endpoint\"\r\nimport Enemy from \"../Enemy\"\r\nimport Player from \"../Player\"\r\nimport Food from \"../Food\"\r\n\r\nconst STORAGE_KEY = 'FOOTBALL_STORAGE_KEY'\r\ndeclare let tt: any;\r\nexport interface ICurrentLevel {\r\n    level: number,\r\n    score: number,\r\n    collected: number\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n\r\n    _maxLevel: number = 1\r\n    _level: number = 1\r\n    _audioMusic: boolean = true\r\n    _audioSound: boolean = true\r\n    _vibrate: boolean = true\r\n    _SideBarReward: boolean = false\r\n    // 技能点\r\n    skillNums: number[] = [0, 0, 0, 0, 0]\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.INIT\r\n    blues: Player[] = []\r\n    reds: Enemy[] = []\r\n    foods: Food[] = []\r\n    currentData: ICurrentLevel = null\r\n    endpoint: Endpoint = null\r\n    // 技能累计数\r\n    powerCount: number = 0\r\n    // 达成条件\r\n    powerCountTarget: number = 4\r\n    // 技能饮品效果\r\n    powerEffectLoop: number = 0\r\n    // 增益牛扒效果\r\n    foodEffectLoop: number = 0\r\n    // 游戏每局时间\r\n    timer: number = 60\r\n    // 加时\r\n    extraTime: number = 30\r\n\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    get level() {\r\n        return this._level\r\n    }\r\n\r\n    set level(data: number) {\r\n        this._level = data\r\n        this.save()\r\n    }\r\n\r\n    get maxLevel() {\r\n        return this._maxLevel\r\n    }\r\n\r\n    set maxLevel(data: number) {\r\n        this._maxLevel = data\r\n        this.save()\r\n    }\r\n\r\n    get audioMusic() {\r\n        return this._audioMusic\r\n    }\r\n\r\n    set audioMusic(data: boolean) {\r\n        this._audioMusic = data\r\n        this.save()\r\n    }\r\n\r\n    get audioSound() {\r\n        return this._audioSound\r\n    }\r\n\r\n    set audioSound(data: boolean) {\r\n        this._audioSound = data\r\n        this.save()\r\n    }\r\n\r\n    get vibrate() {\r\n        return this._vibrate\r\n    }\r\n\r\n    set vibrate(data: boolean) {\r\n        this._vibrate = data\r\n        this.save()\r\n    }\r\n\r\n    get SideBarReward() {\r\n        return this._SideBarReward\r\n    }\r\n\r\n    set SideBarReward(data: boolean) {\r\n        this._SideBarReward = data\r\n        this.save()\r\n    }\r\n    cutSkillNums(k: number) {\r\n        this.skillNums[k]--\r\n        this.save()\r\n    }\r\n    /**\r\n     * 重置游戏状态。\r\n     * \r\n     * 该方法将游戏状态重置为初始值，以便开始新的游戏或重新初始化当前游戏。\r\n     * 它清除了玩家角色、食物等游戏元素，并重置了相关计数器和定时器。\r\n     */\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.INIT\r\n        this.blues = []\r\n        this.reds = []\r\n        this.foods = []\r\n        this.currentData = null\r\n        this.endpoint = null\r\n        this.powerCount = 0\r\n        this.timer = 60\r\n        this.powerEffectLoop = 0\r\n    }\r\n    /**\r\n     * 保存游戏进度和设置。\r\n     * \r\n     * 此函数负责将当前游戏的级别、最大级别、音频设置、振动设置、技能数量和侧边栏奖励等信息存储到本地存储中。\r\n     * 它首先检查是否存在名为\"tt\"的全局变量，以确定使用哪种存储方法（本地存储或同步存储）。\r\n     * 如果\"tt\"不存在，则使用cc.sys.localStorage来保存数据；如果\"tt\"存在，则使用tt.setStorageSync来保存数据。\r\n     * 这种设计允许游戏在不同环境（例如web和移动设备）下灵活地保存玩家的进度和设置。\r\n     */\r\n    save() {\r\n        if (!window[\"tt\"]) {\r\n            cc.sys.localStorage.setItem(STORAGE_KEY, JSON.stringify({\r\n                level: this.level,\r\n                maxLevel: this.maxLevel,\r\n                audioMusic: this.audioMusic,\r\n                audioSound: this.audioSound,\r\n                vibrate: this.vibrate,\r\n                skillNums: this.skillNums,\r\n                SideBarReward: this.SideBarReward\r\n            }))\r\n        }\r\n        else {\r\n            tt.setStorageSync(STORAGE_KEY, JSON.stringify({\r\n                level: this.level,\r\n                maxLevel: this.maxLevel,\r\n                audioMusic: this.audioMusic,\r\n                audioSound: this.audioSound,\r\n                vibrate: this.vibrate,\r\n                skillNums: this.skillNums,\r\n                SideBarReward: this.SideBarReward\r\n            }))\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 从本地存储中恢复游戏设置和进度。\r\n     * 此函数负责从本地存储中读取游戏的配置信息，如关卡进度、音效设置等，并更新实例的相应属性。\r\n     * 它首先检查是否存在特定于应用程序的存储机制，如果不存在，则使用通用的Web存储机制。\r\n     * 在读取数据后，尝试解析JSON字符串为对象，并根据解析结果更新游戏状态。\r\n     * 如果解析失败，将重置所有设置和进度到初始状态。\r\n     */\r\n    restore() {\r\n        let _data = null\r\n        if (!window[\"tt\"]) {\r\n            _data = cc.sys.localStorage.getItem(STORAGE_KEY) as any\r\n        }\r\n        else {\r\n            _data = tt.getStorageSync(STORAGE_KEY) as any\r\n        }\r\n        try {\r\n            const data = JSON.parse(_data)\r\n            this.level = data?.level || 1\r\n            this.maxLevel = data?.maxLevel || 1\r\n            this.audioMusic = data?.audioMusic === false ? false : true\r\n            this.audioSound = data?.audioSound === false ? false : true\r\n            this.vibrate = data?.vibrate === false ? false : true\r\n            this.skillNums = data?.skillNums || [0, 0, 0, 0, 0]\r\n            this.SideBarReward = data === null ? this.SideBarReward : data.SideBarReward;\r\n        } catch {\r\n            this.level = 1\r\n            this.maxLevel = 1\r\n            this.audioMusic = true\r\n            this.audioSound = true\r\n            this.vibrate = true\r\n            // this.skillNums = [0, 0, 0, 0, 0]\r\n            this.SideBarReward = false;\r\n            this.reset()\r\n        }\r\n    }\r\n\r\n    // 处于准备状态的蓝方队员（脚本）\r\n    getBlueReady() {\r\n        const ready = DataManager.instance.blues.find(item => item.status === ENUM_PLAYER_STATUS.READY)\r\n        return ready\r\n    }\r\n    // 就近待传球的蓝方队员（脚本）\r\n    getBlueNext() {\r\n        const readyIndex = DataManager.instance.blues.findIndex(item => item.status === ENUM_PLAYER_STATUS.READY)\r\n        if (readyIndex >= 0) {\r\n            const next = DataManager.instance.blues[readyIndex + 1]\r\n            return next\r\n        }\r\n        return null\r\n    }\r\n    // 获取终点（脚本）\r\n    getEndpoint() {\r\n        return DataManager.instance.endpoint\r\n    }\r\n    // 根据点击屏幕返回指定红方成员（节点）\r\n    getCardEnemy(x: number, y: number) {\r\n        let target: cc.Node = null\r\n        DataManager.instance.reds.forEach(item => {\r\n            const red: cc.Node = item.node\r\n            // 转为世界坐标\r\n            const world = red.parent.convertToWorldSpaceAR(red.position)\r\n            const camera = cc.find('Canvas/Main/Camera').position\r\n            const offsetX = Math.abs(world.x - (camera.x + x))\r\n            const offsetY = Math.abs(world.y - (camera.y + y))\r\n            if (offsetX <= red.width / 2 && offsetY <= red.height / 2) {\r\n                target = red\r\n            }\r\n        })\r\n        return target\r\n    }\r\n    // 根据点击屏幕返回指定的蓝方成员（节点）\r\n    getPassPlayer(x: number, y: number) {\r\n        let target: cc.Node = null\r\n        DataManager.instance.blues.forEach(item => {\r\n            const blue: cc.Node = item.node\r\n            // 转为世界坐标\r\n            const world = blue.parent.convertToWorldSpaceAR(blue.position)\r\n            const camera = cc.find('Canvas/Main/Camera').position\r\n            const offsetX = Math.abs(world.x - (camera.x + x))\r\n            const offsetY = Math.abs(world.y - (camera.y + y))\r\n            if (offsetX <= blue.width / 2 && offsetY <= blue.height / 2) {\r\n                if (blue.getComponent(Player).status != ENUM_PLAYER_STATUS.READY) target = blue\r\n            }\r\n        })\r\n        return target\r\n    }\r\n}\r\n"]}