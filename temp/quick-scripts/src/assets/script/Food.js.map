{"version":3,"sources":["assets\\script\\Food.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { StaticInstance } from './StaticInstance';\r\n// Created by carolsail \r\n\r\nimport Ball from \"./Ball\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_COLLIDER_TAG, ENUM_ENEMY_STATUS, ENUM_GAME_EVENT } from \"./Enum\";\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from \"./manager/DataManager\";\r\nimport EventManager from \"./manager/EventManager\";\r\nimport Player from \"./Player\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Food extends cc.Component {\r\n    x: number\r\n    y: number\r\n    angle: number\r\n    status: ENUM_ENEMY_STATUS = ENUM_ENEMY_STATUS.IDLE\r\n    // 运动参数\r\n    speed: number = 200\r\n    // 运动位移(针对水平运动)\r\n    distance: number = 500\r\n    tempDis: number = 0\r\n    // 移动方向(针对水平运动)\r\n    isDirX: boolean = false\r\n    // 移动方向\r\n    dir: number = 1\r\n    // 弧度(针对圆周运动)\r\n    radian: number = 0\r\n    // 半径(针对圆周运动)\r\n    circleRadius: number = 250\r\n    // 圆心(针对圆周运动)\r\n    circleCenter: cc.Vec2 = cc.v2(0, 0)\r\n    // 其父进攻方\r\n    blue: Player = null\r\n\r\n    init(data: any) {\r\n        Object.assign(this, data)\r\n        DataManager.instance.foods.push(this)\r\n        this.rendor()\r\n    }\r\n\r\n    rendor() {\r\n        this.node.setPosition(this.x, this.y)\r\n        this.node.angle = -this.angle\r\n        // 直线移动\r\n        if (this.status == ENUM_ENEMY_STATUS.MOVE) {\r\n            this.schedule(this.move, 0.01)\r\n        } else if (this.status == ENUM_ENEMY_STATUS.ROUND) {\r\n            // 计算圆心\r\n            this.circleCenter.x = this.blue.x\r\n            this.circleCenter.y = this.blue.y\r\n            this.schedule(this.circleMove, 0.01);\r\n        }\r\n    }\r\n\r\n    setParent(blue: Player) {\r\n        this.blue = blue\r\n    }\r\n\r\n    setSpeed(speed: number) {\r\n        this.speed = speed\r\n        if (speed == 0) {\r\n            this.unscheduleAllCallbacks()\r\n        }\r\n    }\r\n\r\n    playEffect() {\r\n        this.node?.getChildByName('Effect')?.getComponent(cc.ParticleSystem).resetSystem()\r\n    }\r\n    /**\r\n     * 根据指定的时间间隔和移动方向更新物体的位置。\r\n     * @param dt 时间间隔，用于计算物体在该时间段内的位移。\r\n     */\r\n    move(dt: number) {\r\n        if (this.isDirX) {\r\n            this.tempDis += dt * this.speed * this.dir\r\n            if (this.tempDis > this.distance) {\r\n                this.dir = -1\r\n            } else if (this.tempDis < -this.distance) {\r\n                this.dir = 1\r\n            }\r\n            this.node.x += dt * this.speed * this.dir\r\n        } else {\r\n            this.tempDis += dt * this.speed * this.dir\r\n            if (this.tempDis > this.distance) {\r\n                this.dir = -1\r\n            } else if (this.tempDis < -this.distance) {\r\n                this.dir = 1\r\n            }\r\n            this.node.y += dt * this.speed * this.dir\r\n        }\r\n    }\r\n    /**\r\n     * 让节点沿圆形路径移动。\r\n     * 此函数通过计算新的位置和角度，更新节点在圆形路径上的位置。\r\n     * 它使用数学库中的三角函数来根据当前的弧度和速度计算新的x和y坐标。\r\n     * @param dt 时间间隔，用于计算弧度的增加量。\r\n     */\r\n    circleMove(dt: number) {\r\n        // 先计算弧度\r\n        this.radian += dt * (this.speed / 100);\r\n        let x = this.circleRadius * Math.cos(this.radian) + this.circleCenter.x;\r\n        let y = this.circleRadius * Math.sin(this.radian) + this.circleCenter.y;\r\n        this.node.position = cc.v3(x, y, 0);\r\n        // Math.atan2 反正切函数 返回从X轴到某个点的角度（以弧度为单位）。\r\n        let angle = Math.atan2(y, x) / (Math.PI / 180);\r\n        this.node.angle = angle;\r\n    }\r\n\r\n    /**\r\n * 当检测到碰撞事件发生时的处理函数。\r\n * @param other 另一个碰撞器，用于判断是否与特定标签的物体发生碰撞。\r\n * @param self 自身的碰撞器，用于判断自身是否属于特定标签。\r\n * \r\n * 该函数在碰撞检测到特定对象时触发，执行相应的逻辑操作，如播放音效、禁用当前节点、\r\n * 更新数据管理器中的状态等。这些操作基于碰撞的对象标签（如球或食物）进行。\r\n */\r\n    // 碰撞检测\r\n    onCollisionEnter(other: cc.BoxCollider, self: cc.BoxCollider) {\r\n        // 跟球做碰撞\r\n        if (other.tag == ENUM_COLLIDER_TAG.BALL) {\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.COLLECT)\r\n            self.node.active = false\r\n            if (self.tag == ENUM_COLLIDER_TAG.FOOD) {\r\n                // console.log('食物补充能量')\r\n                if (DataManager.instance.powerEffectLoop <= 0) {\r\n                    DataManager.instance.foodEffectLoop = 1\r\n                    DataManager.instance.powerCount = DataManager.instance.powerCountTarget\r\n                    StaticInstance.uiManager.setPowerBar()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}