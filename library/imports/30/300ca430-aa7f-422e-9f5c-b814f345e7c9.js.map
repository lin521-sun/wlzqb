{"version":3,"sources":["assets\\script\\Enemy.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Created by carolsail \r\n\r\nimport Ball from \"./Ball\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_COLLIDER_TAG, ENUM_ENEMY_STATUS, ENUM_GAME_EVENT } from \"./Enum\";\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from \"./manager/DataManager\";\r\nimport EventManager from \"./manager/EventManager\";\r\nimport Player from \"./Player\";\r\nimport { StaticInstance } from \"./StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Enemy extends cc.Component {\r\n    x: number\r\n    y: number\r\n    angle: number\r\n    status: ENUM_ENEMY_STATUS = ENUM_ENEMY_STATUS.IDLE\r\n    // 运动参数\r\n    speed: number = 200\r\n    // 运动位移(针对水平运动)\r\n    distance: number = 500\r\n    tempDis: number = 0\r\n    // 移动方向(针对水平运动)\r\n    isDirX: boolean = false\r\n    // 移动方向\r\n    dir: number = 1\r\n    // 弧度(针对圆周运动)\r\n    radian: number = 0\r\n    // 半径(针对圆周运动)\r\n    circleRadius: number = 250\r\n    // 圆心(针对圆周运动)\r\n    circleCenter: cc.Vec2 = cc.v2(0, 0)\r\n    // 其父进攻方\r\n    blue: Player = null\r\n\r\n    @property([cc.SpriteFrame])\r\n    spriteFrameArr: cc.SpriteFrame[] = []\r\n    @property(cc.Node)\r\n    ballNode: cc.Node = null\r\n    @property(cc.Node)\r\n    circleNode: cc.Node = null\r\n\r\n    init(data: any) {\r\n        if (this.spriteFrameArr.length <= 0) return\r\n        Object.assign(this, data)\r\n        DataManager.instance.reds.push(this)\r\n        this.unscheduleAllCallbacks()\r\n        this.tempDis = 0;\r\n        this.rendor()\r\n    }\r\n\r\n    rendor() {\r\n        let current = DataManager.instance.level - 1\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.spriteFrameArr[current]\r\n        this.node.setPosition(this.x, this.y)\r\n        this.node.angle = -this.angle\r\n        // 直线移动\r\n        if (this.status == ENUM_ENEMY_STATUS.MOVE) {\r\n            this.schedule(this.move, 0.01)\r\n        } else if (this.status == ENUM_ENEMY_STATUS.ROUND) {\r\n            // 计算圆心\r\n            this.circleCenter.x = this.blue.x\r\n            this.circleCenter.y = this.blue.y\r\n            this.schedule(this.circleMove, 0.01);\r\n        }\r\n    }\r\n\r\n    setBallActive(status: boolean) {\r\n        this.ballNode.active = status\r\n    }\r\n\r\n    setCircleActive(status: boolean) {\r\n        this.circleNode.color = cc.color(245, 103, 103, 255)\r\n        this.circleNode.active = status\r\n    }\r\n\r\n    setParent(blue: Player) {\r\n        this.blue = blue\r\n    }\r\n\r\n    setSpeed(speed: number) {\r\n        this.speed = speed\r\n        if (speed == 0) {\r\n            this.unscheduleAllCallbacks()\r\n        }\r\n    }\r\n\r\n    playEffect() {\r\n        this.node?.getChildByName('Effect')?.getComponent(cc.ParticleSystem).resetSystem()\r\n    }\r\n    /**\r\n     * 实现物体的移动功能。\r\n     * 此函数主要负责根据物体的当前状态（方向、速度、距离）更新物体的位置。\r\n     * 移动是基于固定的时间步长（dt）进行的，物体在X轴或Y轴上移动取决于isDirX的值。\r\n     * 当物体移动的距离超过预设的距离时，物体的方向会发生反转，以实现往复运动的效果。\r\n     */\r\n    move() {\r\n        let dt = 0.016;\r\n        if (this.isDirX) {\r\n            this.tempDis += dt * this.speed * this.dir\r\n            if (this.tempDis > this.distance) {\r\n                this.dir = -1\r\n            } else if (this.tempDis < -this.distance) {\r\n                this.dir = 1\r\n            }\r\n            this.node.x += dt * this.speed * this.dir\r\n        } else {\r\n            this.tempDis += dt * this.speed * this.dir\r\n            if (this.tempDis > this.distance) {\r\n                this.dir = -1\r\n            } else if (this.tempDis < -this.distance) {\r\n                this.dir = 1\r\n            }\r\n            this.node.y += dt * this.speed * this.dir\r\n        }\r\n    }\r\n    /**\r\n     * 使节点沿圆形路径移动。\r\n     * @param dt 时间间隔，用于计算位移。\r\n     */\r\n    circleMove(dt: number) {\r\n        // 顺逆时针\r\n        let dir = 1\r\n        if (!this.isDirX) dir = -1\r\n\r\n        // 先计算弧度\r\n        this.radian += dt * (this.speed / 100) * dir;\r\n        let x = this.circleRadius * Math.cos(this.radian) + this.circleCenter.x;\r\n        let y = this.circleRadius * Math.sin(this.radian) + this.circleCenter.y;\r\n        this.node.position = cc.v3(x, y, 0);\r\n        // Math.atan2 反正切函数 返回从X轴到某个点的角度（以弧度为单位）。\r\n        let angle = Math.atan2(y, x) / (Math.PI / 180);\r\n\r\n        this.node.angle = angle;\r\n    }\r\n\r\n    /**\r\n     * 当检测到碰撞事件发生时的处理函数。\r\n     * @param other 另一个碰撞器，可能是球体。\r\n     * @param self 自身的碰撞器，表示敌人的碰撞器。\r\n     * \r\n     * 此函数在敌人的碰撞器与球体碰撞时被调用，根据碰撞的情况执行不同的逻辑，\r\n     * 如播放振动效果、改变敌人状态、结束游戏等。\r\n     */\r\n    // 碰撞检测\r\n    onCollisionEnter(other: cc.BoxCollider, self: cc.BoxCollider) {\r\n        // 跟球做碰撞\r\n        if (other.tag == ENUM_COLLIDER_TAG.BALL) {\r\n            if (DataManager.instance.vibrate) {\r\n                EventManager.instance.emit(ENUM_GAME_EVENT.GAME_VIBRATE);\r\n            }\r\n            // 是否必杀状态\r\n            if (other.node.getChildByName('Shield').active) {\r\n                // 击破防守员\r\n                this.setSpeed(0)\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.DIE)\r\n                self.node.getComponent(Enemy).status = ENUM_ENEMY_STATUS.DIE\r\n                self.node.getComponent(cc.Animation).play()\r\n            } else {\r\n                if (self.node.getComponent(Enemy).status == ENUM_ENEMY_STATUS.DIE) return\r\n                // 拦截游戏结束\r\n                other.node.active = false\r\n                this.setSpeed(0)\r\n                this.playEffect()\r\n                this.setBallActive(true)\r\n                EventManager.instance.emit(ENUM_GAME_EVENT.GAME_LOSE)\r\n            }\r\n        }\r\n    }\r\n}"]}