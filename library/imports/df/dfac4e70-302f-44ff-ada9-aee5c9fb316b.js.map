{"version":3,"sources":["assets\\script\\Breath.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAAhD;QAAA,qEAuCC;QApCG,WAAK,GAAG,GAAG,CAAC;QAEZ,YAAM,GAAG,GAAG,CAAC;;IAkCjB,CAAC;IAjCG,sBAAK,GAAL;QACI,IAAI,CAAC,EAAE,EAAE,CAAC;IACd,CAAC;IACD;;;;UAIM;IACN,mBAAE,GAAF;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,SAAS,CACf,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,EACnC,EAAE,CAAC,QAAQ,CAAC;YACR,KAAI,CAAC,EAAE,EAAE,CAAC;QACd,CAAC,CACA,CACJ,CACJ,CAAA;IACL,CAAC;IACD;;;;OAIG;IACH,mBAAE,GAAF;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,SAAS,CACf,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,EACpC,EAAE,CAAC,QAAQ,CAAC;YACR,KAAI,CAAC,EAAE,EAAE,CAAC;QACd,CAAC,CACA,CACJ,CACJ,CAAA;IACL,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;yCACT;IAEZ;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;0CACR;IALI,MAAM;QAD1B,OAAO;OACa,MAAM,CAuC1B;IAAD,aAAC;CAvCD,AAuCC,CAvCmC,EAAE,CAAC,SAAS,GAuC/C;kBAvCoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Breath extends cc.Component {\r\n\r\n    @property(cc.Integer)\r\n    scale = 0.6;\r\n    @property(cc.Integer)\r\n    scale1 = 0.8;\r\n    start() {\r\n        this.f1();\r\n    }\r\n    /**\r\n        * 执行一个序列动作，首先缩放节点，然后调用f2函数。\r\n        * 此函数通过使用cc.sequence和cc.callFunc组合动作来实现节点的缩放和后续动作的触发。\r\n        * 它无返回值。\r\n        */\r\n    f1() {\r\n        this.node.runAction(\r\n            cc.sequence(cc.scaleTo(0.5, this.scale),\r\n                cc.callFunc(() => {\r\n                    this.f2();\r\n                }\r\n                )\r\n            )\r\n        )\r\n    }\r\n    /**\r\n     * 执行一个序列动作，首先缩放节点，然后调用函数f1。\r\n     * 此函数通过cc.sequence创建一个动作序列，首先将节点缩放到指定比例，然后在动作完成后调用f1函数。\r\n     * 使用callFunc动作来在动作序列结束时执行回调函数，这是在Cocos Creator中常见的做法。\r\n     */\r\n    f2() {\r\n        this.node.runAction(\r\n            cc.sequence(cc.scaleTo(0.5, this.scale1),\r\n                cc.callFunc(() => {\r\n                    this.f1();\r\n                }\r\n                )\r\n            )\r\n        )\r\n    }\r\n}\r\n"]}