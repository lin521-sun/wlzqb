{"version":3,"sources":["assets\\script\\manager\\AudioManager.ts"],"names":[],"mappings":";;;;;AAAA,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvB,kCAA4C;AAC5C,6CAAwC;AACxC,qDAA+C;AAE/C;IAAA;QACY,gBAAW,GAAmB,IAAI,CAAA;IAyE9C,CAAC;IAtEU,wBAAW,GAAlB;QACI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAA;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;SACxB;QAED,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;IAED,sBAAW,wBAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,WAAW,EAAgB,CAAA;QAC3C,CAAC;;;OAAA;IAED,2BAAI,GAAJ;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,EAAE,CAAA;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAA;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAA;IACjC,CAAC;IACD;;;;WAIO;IACD,gCAAS,GAAf;;;;;;wBACI,IAAI,CAAC,qBAAW,CAAC,QAAQ,CAAC,UAAU;4BAAE,sBAAM;wBAC5C,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;4BACvB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAA;4BACvB,sBAAM;yBACT;wBACY,qBAAM,yBAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAe,CAAC,GAAG,CAAC,EAAA;;wBAAlE,IAAI,GAAG,SAA2D;wBACxE,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAA;wBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAA;;;;;KAC1B;IACD;;;;;;WAMO;IACP,gCAAS,GAAT;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAA;IAC3B,CAAC;IACD;;;;;;;;;;QAUI;IACE,gCAAS,GAAf,UAAgB,IAAqB,EAAE,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;;;;;;wBAC1D,IAAI,CAAC,qBAAW,CAAC,QAAQ,CAAC,UAAU;4BAAE,sBAAM;wBAC/B,qBAAM,yBAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAA;;wBAAnD,IAAI,GAAG,SAA4C;wBACzD,sBAAO,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,EAAA;;;;KACjD;IACD;;;;;;;OAOG;IACH,gCAAS,GAAT,UAAU,OAAe;QACrB,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IACtC,CAAC;IAvEc,sBAAS,GAAQ,IAAI,CAAA;IAwExC,mBAAC;CA1ED,AA0EC,IAAA;kBA1EoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init() {\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n    /**\r\n         * 异步播放背景音乐。\r\n         * 此方法首先检查是否有可用的背景音乐资源，然后尝试播放。如果当前音频源已经有音轨，则直接播放；\r\n         * 否则，从资源管理器异步获取背景音乐音轨，并将其分配给音频源后播放。\r\n         */\r\n    async playMusic() {\r\n        if (!DataManager.instance.audioMusic) return\r\n        if (this.audioSource.clip) {\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n    /**\r\n         * 停止音乐播放。\r\n         * \r\n         * 该方法用于停止当前正在进行的音乐播放。它调用了音频源的stop方法，\r\n         * 以便立即结束音乐播放。这对于需要在应用程序中控制音乐播放的场景非常有用，\r\n         * 比如在游戏或媒体应用中根据用户操作停止背景音乐。\r\n         */\r\n    stopMusic() {\r\n        this.audioSource.stop()\r\n    }\r\n    /**\r\n      * 异步播放声音效果。\r\n      * \r\n      * 此函数用于根据给定的声音名称异步播放声音效果。它首先检查数据管理器中是否存在声音资源，\r\n      * 然后从资源管理器中获取声音剪辑，并使用Unity的音频引擎播放该声音剪辑。\r\n      * 如果指定了循环播放，声音将一直播放直到停止或游戏结束。\r\n      * \r\n      * @param name 声音效果的名称，使用枚举类型ENUM_AUDIO_CLIP来指定。\r\n      * @param isLoop 是否循环播放声音，默认为false（不循环）。\r\n      * @returns 返回一个表示声音播放的唯一标识符。\r\n      */\r\n    async playSound(name: ENUM_AUDIO_CLIP, isLoop: boolean = false) {\r\n        if (!DataManager.instance.audioSound) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n    /**\r\n     * 停止播放音效。\r\n     * \r\n     * 本函数通过音频引擎停止指定音效的播放。音效通常是指短促的音频片段，例如游戏中的人物脚步声、攻击声等。\r\n     * 使用音效ID作为参数，可以直接定位到正在播放的音效，实现精确的控制。\r\n     * \r\n     * @param audioId 音效的ID，用于唯一标识一个音效实例。\r\n     */\r\n    stopSound(audioId: number) {\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n"]}