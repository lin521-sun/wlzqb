{"version":3,"sources":["assets\\script\\manager\\UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Created by carolsail\r\n\r\nimport { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport GameLayer from '../layer/GameLayer';\r\nimport MenuLayer from '../layer/MenuLayer';\r\nimport WinLayer from '../layer/WinLayer';\r\nimport LoseLayer from '../layer/LoseLayer';\r\nimport SettingLayer from '../layer/SettingLayer';\r\nimport LevelLayer from '../layer/LevelLayer';\r\nimport LoadingLayer from '../layer/LoadingLayer';\r\nimport RankLayer from '../layer/RankLayer';\r\nimport TipLayer from '../layer/TipLayer';\r\nimport NoticeLayer from '../layer/NoticeLayer';\r\nimport { SideBarLayer } from '../layer/SideBarLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    @property(GameLayer)\r\n    gameLayer: GameLayer = null\r\n    @property(MenuLayer)\r\n    menuLayer: MenuLayer = null\r\n    @property(WinLayer)\r\n    winLayer: WinLayer = null\r\n    @property(LoseLayer)\r\n    loseLayer: LoseLayer = null\r\n    @property(SettingLayer)\r\n    settingLayer: SettingLayer = null\r\n    @property(LevelLayer)\r\n    levelLayer: LevelLayer = null\r\n    @property(LoadingLayer)\r\n    loadingLayer: LoadingLayer = null\r\n    @property(RankLayer)\r\n    rankLayer: RankLayer = null\r\n    @property(TipLayer)\r\n    tipLayer: TipLayer = null\r\n    @property(NoticeLayer)\r\n    noticeLayer: NoticeLayer = null\r\n    @property(SideBarLayer)\r\n    sideBarLayer: SideBarLayer = null\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n    /**\r\n         * 在类实例加载完成后调用的函数。\r\n         * 该函数负责初始化UI管理器，并将各种UI层与枚举类型对应起来，以便于后续根据枚举类型快速访问相应的UI层。\r\n         */\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n        this.uiMap.set(ENUM_UI_TYPE.GAME, this.gameLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.MENU, this.menuLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.WIN, this.winLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.LOSE, this.loseLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.SETTING, this.settingLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.LEVEL, this.levelLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.LOADING, this.loadingLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.RANK, this.rankLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.TIP, this.tipLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.NOTICE, this.noticeLayer)\r\n        this.uiMap.set(ENUM_UI_TYPE.SIDEBARLAYER, this.sideBarLayer)\r\n    }\r\n    /**\r\n     * 切换UI层的显示或隐藏状态。\r\n     * \r\n     * 此方法用于根据给定的UI类型和状态，切换相应的UI层的可见性。如果提供了回调函数，则在切换完成后调用它。\r\n     * 主要用于在UI管理器中动态显示或隐藏不同的UI层，以响应用户的操作或系统的状态变化。\r\n     * \r\n     * @param key UI层的类型枚举值，用于唯一标识一个UI层。\r\n     * @param status 是否显示UI层的标志，默认为true表示显示。\r\n     * @param callback 切换完成后调用的回调函数，可选。\r\n     */\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if (this.uiMap.has(key)) {\r\n            const layer = this.uiMap.get(key)\r\n            status ? layer.show() : layer.hide()\r\n            callback && callback()\r\n        }\r\n    }\r\n    /**\r\n     * 设置游戏界面的力量条。\r\n     * \r\n     * 本函数旨在调整游戏界面中力量条的显示状态或属性。通过从UI映射中获取特定类型的游戏层，\r\n     * 然后调用该层的setPowerBar方法来实现。此功能可能用于更新力量条的填充程度、显示样式或其他相关属性，\r\n     * 以反映游戏进程中的实时变化。\r\n     * \r\n     * @remarks\r\n     * 此函数假设UI映射（uiMap）已正确配置，并且存在对应于GAME类型的游戏层。\r\n     * 使用类型断言来确保获取的层确实是GameLayer类型，然后调用其setPowerBar方法。\r\n     * \r\n     * @see {ENUM_UI_TYPE} 游戏界面类型的枚举定义。\r\n     * @see {GameLayer} 游戏层的类定义，包含setPowerBar方法。\r\n     */\r\n    setPowerBar() {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.GAME) as GameLayer\r\n        layer.setPowerBar()\r\n    }\r\n    /**\r\n     * 设置队伍标签。\r\n     * \r\n     * 本函数旨在为游戏界面中的队伍区域设置标签。通过访问UI映射表，获取特定于游戏的层对象，\r\n     * 并调用其方法来设置队伍标签。此功能对于显示游戏中的队伍信息至关重要，确保玩家能够清晰地\r\n     * 观察到队伍的组成和状态。\r\n     */\r\n    setTeamLabel() {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.GAME) as GameLayer\r\n        layer.setTeamLabel()\r\n    }\r\n\r\n    setPropNum() {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.GAME) as GameLayer\r\n        layer.setPropNum()\r\n    }\r\n    /**\r\n     * 设置游戏层的道具数量。\r\n     * \r\n     * 本函数旨在调整游戏层中道具的数量。通过访问UI映射获取特定类型的游戏层，\r\n     * 然后调用该层的setPropNum方法来实现道具数量的设置。此操作对于确保游戏的\r\n     * 正确进行和平衡性至关重要。\r\n     * \r\n     * @remarks\r\n     * 此函数假设UI映射（uiMap）已正确初始化，并且存在对应的GAME类型层。\r\n     */\r\n    setLoseTitle(msg: string = '') {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.LOSE) as LoseLayer\r\n        layer.setLoseTitle(msg)\r\n    }\r\n    /**\r\n     * 设置提示信息。\r\n     * \r\n     * 本函数用于更新用户界面中提示层的提示信息。它接受一个可选的数字参数来指定要显示的提示信息的编号。\r\n     * 如果没有提供参数，则默认使用1作为提示信息编号。此功能主要用于与用户界面的交互，提供动态更新提示信息的能力。\r\n     * \r\n     * @param num {number} - 要显示的提示信息的编号。默认值为1。\r\n     */\r\n    setTip(num: number = 1) {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.TIP) as TipLayer\r\n        layer.setTip(num)\r\n    }\r\n    /**\r\n     * 设置通知标签文本。\r\n     * \r\n     * 此方法用于更新用户界面中通知层的标签文本。如果未指定文本，则默认使用空字符串。\r\n     * 通过从UI映射中获取特定类型的通知层，并调用其设置标签文本的方法来实现更新。\r\n     * \r\n     * @param str {string} - 要设置的通知标签文本，默认为空字符串。\r\n     */\r\n    setNoticeLabel(str: string = '') {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.NOTICE) as NoticeLayer\r\n        layer.setNoticeLabel(str)\r\n    }\r\n    /**\r\n     * 显示完成通知\r\n     * 此函数用于在游戏窗口中显示完成通知。它基于传入的状态决定是否显示通知。\r\n     * 通知的显示与否由`status`参数决定，如果`status`为真，则显示通知；否则，隐藏通知。\r\n     * \r\n     * @param status {boolean} - 控制通知是否显示的标志，默认为false，即默认隐藏通知。\r\n     */\r\n    showCompleteNotice(status: boolean = false) {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.WIN) as WinLayer\r\n        layer.showCompleteNotice(status)\r\n    }\r\n    /**\r\n     * 停止游戏记录。\r\n     * \r\n     * 本函数用于结束游戏层的记录状态。在游戏过程中，可能需要记录玩家的操作或游戏状态，\r\n     * 而这个函数提供了一个方式来停止这种记录，可能是为了保存当前状态，或者是因为游戏结束等原因。\r\n     * \r\n     * @remarks\r\n     * 本函数首先通过UI映射获取到游戏层对象，然后调用该对象的endRecord方法来结束记录。\r\n     * 这种设计模式使得代码具有较好的模块化和可扩展性。\r\n     */\r\n    stopRecord() {\r\n        const layer = this.uiMap.get(ENUM_UI_TYPE.GAME) as GameLayer\r\n        layer.endRecord()\r\n    }\r\n\r\n}\r\n"]}